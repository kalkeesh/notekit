<!-- <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>NoteKit - Simple Notepad</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 30px;
      background: #f5f5f5;
    }
    h1 {
      color: #333;
    }
    .note-form, .notes-list {
      background: #fff;
      padding: 20px;
      margin-bottom: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    input, textarea, button {
      width: 100%;
      padding: 8px;
      margin: 6px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 14px;
    }
    textarea {
      height: 100px;
      resize: vertical;
    }
    button {
      background: #4CAF50;
      color: white;
      cursor: pointer;
      border: none;
    }
    button:hover {
      background: #45a049;
    }
    .note {
      border-bottom: 1px solid #ddd;
      padding: 10px 0;
    }
    .note:last-child {
      border-bottom: none;
    }
    .actions button {
      width: auto;
      margin-right: 5px;
      padding: 5px 10px;
      background: #2196F3;
      border-radius: 4px;
    }
    .actions button.delete {
      background: #f44336;
    }
  </style>
</head>
<body>

  <h1>üìù NoteKit</h1>

  <div class="note-form">
    <h3>Add / Update Note</h3>
    <input type="hidden" id="noteId">
    <input type="text" id="title" placeholder="Title">
    <textarea id="content" placeholder="Write your note here... (Enter for new line)"></textarea>
    <button onclick="saveNote()">Save</button>
  </div>

  <div class="notes-list">
    <h3>All Notes</h3>
    <div id="notes"></div>
  </div>

  <script>
    const API_URL = "http://localhost:8080/api/notes";

    // Replace \n with <br> when displaying text
    function formatMultiline(text) {
      return text.replace(/\n/g, "<br>");
    }

    // Fetch and display all notes
    async function loadNotes() {
      const res = await fetch(API_URL);
      const notes = await res.json();
      const notesDiv = document.getElementById("notes");
      notesDiv.innerHTML = "";
      notes.forEach(note => {
        notesDiv.innerHTML += `
          <div class="note">
            <h4>${note.title}</h4>
            <p>${formatMultiline(note.content)}</p>
            <div class="actions">
              <button onclick="editNote('${note.id}', \`${note.title}\`, \`${note.content}\`)">Edit</button>
              <button class="delete" onclick="deleteNote('${note.id}')">Delete</button>
            </div>
          </div>
        `;
      });
    }

    // Save (POST or PUT)
    async function saveNote() {
      const id = document.getElementById("noteId").value;
      const title = document.getElementById("title").value;
      const content = document.getElementById("content").value;

      const note = { title, content };

      if (id) {
        // PUT update
        await fetch(`${API_URL}/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(note)
        });
      } else {
        // POST new
        await fetch(API_URL, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(note)
        });
      }

      document.getElementById("noteId").value = "";
      document.getElementById("title").value = "";
      document.getElementById("content").value = "";
      loadNotes();
    }

    // Edit note (populate form)
    function editNote(id, title, content) {
      document.getElementById("noteId").value = id;
      document.getElementById("title").value = title;
      document.getElementById("content").value = content;
    }

    // Delete note
    async function deleteNote(id) {
      await fetch(`${API_URL}/${id}`, { method: "DELETE" });
      loadNotes();
    }

    // Load notes on page load
    loadNotes();
  </script>

</body>
</html> -->


<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>NoteKit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .note-card {
            cursor: pointer;
            transition: transform 0.2s;
        }
        .note-card:hover {
            transform: scale(1.02);
        }
        .modal-fullscreen .modal-content {
            border-radius: 0;
        }
        textarea {
            resize: none;
        }
    </style>
</head>
<body>
<div class="container my-4">
    <h2 class="text-center mb-4">üìí My Notes</h2>
    <div id="notesList" class="row g-3"></div>
</div>

<div class="modal fade" id="noteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <input type="text" id="noteTitle" class="form-control border-0 fs-4 fw-bold" placeholder="Title">
                <button class="btn btn-success ms-2" id="saveBtn"><i class="bi bi-check-lg"></i></button>
                <button type="button" class="btn-close ms-2" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <textarea id="noteContent" class="form-control h-100 fs-5" placeholder="Write your note..."></textarea>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let notes = [];
    let currentNoteId = null;

    async function loadNotes() {
        const res = await fetch("/api/notes");
        notes = await res.json();
        displayNotes();
    }

    function displayNotes() {
        const list = document.getElementById("notesList");
        list.innerHTML = "";
        notes.forEach(note => {
            const col = document.createElement("div");
            col.className = "col-12";
            col.innerHTML = `
                <div class="card note-card p-3 shadow-sm" onclick="openNote('${note.id}')">
                    <h5 class="mb-1">${note.title}</h5>
                    <p class="text-muted small text-truncate">${note.content}</p>
                </div>`;
            list.appendChild(col);
        });
    }

    function openNote(id) {
        const note = notes.find(n => n.id === id);
        currentNoteId = id;
        document.getElementById("noteTitle").value = note.title;
        document.getElementById("noteContent").value = note.content;
        const modal = new bootstrap.Modal(document.getElementById("noteModal"));
        modal.show();
    }

    // Save note (PUT request)
    document.getElementById("saveBtn").addEventListener("click", async () => {
        if (!currentNoteId) return;
        const updatedNote = {
            title: document.getElementById("noteTitle").value,
            content: document.getElementById("noteContent").value
        };
        await fetch(`/api/notes/${currentNoteId}`, {
            method: "PUT",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify(updatedNote)
        });
        await loadNotes();
        bootstrap.Modal.getInstance(document.getElementById("noteModal")).hide();
    });

    loadNotes();
</script>
</body>
</html> -->


<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>NoteKit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .note-card {
            cursor: pointer;
            transition: transform 0.2s;
        }
        .note-card:hover {
            transform: scale(1.02);
        }
        .modal-fullscreen .modal-content {
            border-radius: 0;
        }
        textarea {
            resize: none;
        }
        /* Floating Add Button */
        .add-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1050;
        }
    </style>
</head>
<body>
<div class="container my-4">
    <h2 class="text-center mb-4">üìí My Notes</h2>
    <div id="notesList" class="row g-3"></div>
</div>

<button class="btn btn-primary rounded-circle p-3 add-btn shadow" onclick="createNote()">
    <i class="bi bi-plus-lg fs-3"></i>
</button>

<div class="modal fade" id="noteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <input type="text" id="noteTitle" class="form-control border-0 fs-4 fw-bold" placeholder="Title">
                <button type="button" class="btn-close ms-2" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <textarea id="noteContent" class="form-control h-100 fs-5" placeholder="Write your note..."></textarea>
            </div>
            <div class="modal-footer d-flex justify-content-end">
                <button class="btn btn-success" id="saveBtn"><i class="bi bi-check-lg"></i></button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let notes = [];
    let currentNoteId = null;
    let isNewNote = false;

    // Fetch notes from backend
    async function loadNotes() {
        const res = await fetch("/api/notes");
        notes = await res.json();
        displayNotes();
    }

    // Display notes as cards (2 columns, dynamic size)
    function displayNotes() {
        const list = document.getElementById("notesList");
        list.innerHTML = "";
        notes.forEach(note => {
            const col = document.createElement("div");
            // 2 columns on all screens, dynamic width on large screens
            col.className = "col-6 col-lg-auto d-flex";
            col.innerHTML = `
                <div class="card note-card p-3 shadow-sm flex-fill" onclick="openNote('${note.id}')">
                    <h5 class="mb-1">${note.title}</h5>
                    <p class="text-muted small">${note.content.replace(/\n/g, "<br>")}</p>
                </div>`;
            list.appendChild(col);
        });
    }


    // Open modal with note data
    function openNote(id) {
        const note = notes.find(n => n.id === id);
        currentNoteId = id;
        isNewNote = false;
        document.getElementById("noteTitle").value = note.title;
        document.getElementById("noteContent").value = note.content;
        const modal = new bootstrap.Modal(document.getElementById("noteModal"));
        modal.show();
    }

    // Open modal for new note
    function createNote() {
        currentNoteId = null;
        isNewNote = true;
        document.getElementById("noteTitle").value = "";
        document.getElementById("noteContent").value = "";
        const modal = new bootstrap.Modal(document.getElementById("noteModal"));
        modal.show();
    }

    // Save note (PUT or POST)
    document.getElementById("saveBtn").addEventListener("click", async () => {
        const noteData = {
            title: document.getElementById("noteTitle").value,
            content: document.getElementById("noteContent").value
        };

        if (isNewNote) {
            // POST new note
            await fetch(`/api/notes`, {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(noteData)
            });
        } else {
            // PUT existing note
            await fetch(`/api/notes/${currentNoteId}`, {
                method: "PUT",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(noteData)
            });
        }

        await loadNotes();
        bootstrap.Modal.getInstance(document.getElementById("noteModal")).hide();
    });

    loadNotes();
</script>
</body>
</html> -->

no password shit
<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>NoteKit</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        /* Masonry container */
        #notesList {
            column-count: 2;       /* 2 columns on all screens */
            column-gap: 1rem;      /* spacing between columns */
        }
        .note-card {
            cursor: pointer;
            transition: transform 0.2s;
            display: inline-block; /* required for masonry */
            width: 100%;           /* take full column width */
            margin-bottom: 1rem;   /* spacing between cards vertically */
        }
        .note-card:hover {
            transform: scale(1.02);
        }
        .modal-fullscreen .modal-content {
            border-radius: 0;
        }
        textarea {
            resize: none;
        }
        /* Floating Add Button */
        .add-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1050;
        }
    </style>
</head>
<body>
<div class="container my-4">
    <h2 class="text-center mb-4">üìí My Notes</h2>
    <div id="notesList"></div>
</div>

<button class="btn btn-primary rounded-circle p-3 add-btn shadow" onclick="createNote()">
    <i class="bi bi-plus-lg fs-3"></i>
</button>

<div class="modal fade" id="noteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <input type="text" id="noteTitle" class="form-control border-0 fs-4 fw-bold" placeholder="Title">
                <button type="button" class="btn-close ms-2" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <textarea id="noteContent" class="form-control h-100 fs-5" placeholder="Write your note..."></textarea>
            </div>
            <div class="modal-footer d-flex justify-content-end">
                <button class="btn btn-success" id="saveBtn"><i class="bi bi-check-lg"></i></button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let notes = [];
    let currentNoteId = null;
    let isNewNote = false;

    async function loadNotes() {
        const res = await fetch("/api/notes");
        notes = await res.json();
        displayNotes();
    }

    // Display notes as masonry cards
    function displayNotes() {
        const list = document.getElementById("notesList");
        list.innerHTML = "";
        notes.forEach(note => {
            const card = document.createElement("div");
            card.className = "card note-card p-3 shadow-sm";
            card.onclick = () => openNote(note.id);
            card.innerHTML = `
                <h5 class="mb-1">${note.title}</h5>
                <p class="text-muted small">${note.content.replace(/\n/g, "<br>")}</p>
            `;
            list.appendChild(card);
        });
    }

    function openNote(id) {
        const note = notes.find(n => n.id === id);
        currentNoteId = id;
        isNewNote = false;
        document.getElementById("noteTitle").value = note.title;
        document.getElementById("noteContent").value = note.content;
        const modal = new bootstrap.Modal(document.getElementById("noteModal"));
        modal.show();
    }

    function createNote() {
        currentNoteId = null;
        isNewNote = true;
        document.getElementById("noteTitle").value = "";
        document.getElementById("noteContent").value = "";
        const modal = new bootstrap.Modal(document.getElementById("noteModal"));
        modal.show();
    }

    document.getElementById("saveBtn").addEventListener("click", async () => {
        const noteData = {
            title: document.getElementById("noteTitle").value,
            content: document.getElementById("noteContent").value
        };
        if (isNewNote) {
            await fetch(`/api/notes`, {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(noteData)
            });
        } else {
            await fetch(`/api/notes/${currentNoteId}`, {
                method: "PUT",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(noteData)
            });
        }
        await loadNotes();
        bootstrap.Modal.getInstance(document.getElementById("noteModal")).hide();
    });

    loadNotes();
</script>
</body>
</html> -->